---
import naturdermaLogo from '../assets/naturderma-logo.png';
import { Icon } from 'astro-icon/components';

// Get the current path to determine active state
const currentPath = Astro.url.pathname;

// Define navigation items
const navItems = [
    { path: '/', label: 'Home' },
    { path: '/about', label: 'Over ons' },
    { path: '/blog', label: 'Blog' },
    { path: '/contact', label: 'Contact' }
];
---

<header id="header">
    <div class="topBar">
        <img id="background" src={naturdermaLogo.src} alt="Naturderma logo" fetchpriority="high"/>
        <button id="theme-toggle" class="theme-toggle" aria-label="Toggle theme">
            <Icon name="sun" class="sun-icon" />
            <Icon name="moon" class="moon-icon" />
        </button>
    </div>
    <nav>
        <ul>
            {navItems.map(({ path, label }) => (
                <li>
                    <a 
                        href={path}
                        class:list={[
                            'nav-link',
                            { active: currentPath === path || 
                              (path !== '/' && currentPath.startsWith(path)) }
                        ]}
                        aria-current={currentPath === path ? 'page' : undefined}
                    >
                        {label}
                    </a>
                </li>
            ))}
        </ul>
    </nav>
</header>

<style lang="scss">
    @use 'sass:map';
    @use '../styles/_partials/_design-system' as *;

    header {
        display: flex;
        flex-direction: column;
    }

    .topBar {
        background-color: var(--bg-primary);
        height: 150px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: map.get($spacing, 4);

        img {
            max-width: 347px;
            height: auto;
        }
    }

    .theme-toggle {
        background: none;
        border: none;
        cursor: pointer;
        padding: map.get($spacing, 2);
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        color: var(--text-primary);
        transition: all 0.3s ease;

        &:hover {
            background-color: var(--bg-secondary);
            color: var(--text-secondary);
        }

        svg {
            width: 24px;
            height: 24px;
            position: absolute;
            transition: transform 0.3s ease, opacity 0.3s ease;
        }

        .sun-icon {
            opacity: 0;
            transform: rotate(90deg) scale(0);
        }

        .moon-icon {
            opacity: 1;
            transform: rotate(0) scale(1);
        }
    }

    :global([data-theme="dark"]) {
        .theme-toggle {
            .sun-icon {
                opacity: 1;
                transform: rotate(0) scale(1);
            }

            .moon-icon {
                opacity: 0;
                transform: rotate(-90deg) scale(0);
            }
        }
    }

    nav {
        border-bottom: 1px solid var(--border-primary);
        
        ul {
            list-style: none;
            display: flex;
            gap: map.get($spacing, 8);
            padding: map.get($spacing, 4);
            margin: 0;
            justify-content: center;
        }

        .nav-link {
            color: var(--text-primary);
            text-decoration: none;
            font-weight: map.get($font-weights, medium);
            padding: map.get($spacing, 2) map.get($spacing, 4);
            border-radius: 4px;
            transition: all 0.3s ease;
            position: relative;

            &::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 50%;
                transform: translateX(-50%);
                width: 0;
                height: 2px;
                background-color: var(--bg-secondary);
                transition: width 0.3s ease;
            }

            &:hover::after {
                width: 100%;
            }
        }
    }

    @media (max-width: map.get($breakpoints, md)) {
        .topBar {
            height: 100px;
            padding: map.get($spacing, 2);

            img {
                max-width: 200px;
            }
        }

        nav ul {
            gap: map.get($spacing, 4);
            padding: map.get($spacing, 2);
        }
    }
</style>

<script>
    // Theme toggle functionality
    const themeToggle = document.getElementById('theme-toggle');
    
    // Function to set theme
    function setTheme(theme) {
        document.documentElement.setAttribute('data-theme', theme);
        localStorage.setItem('theme', theme);
    }

    // Check for saved theme preference
    const savedTheme = localStorage.getItem('theme') || 'light';
    setTheme(savedTheme);

    // Toggle theme on button click
    themeToggle?.addEventListener('click', () => {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        setTheme(newTheme);
    });

    // Handle system preference changes
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        const newTheme = e.matches ? 'dark' : 'light';
        setTheme(newTheme);
    });
</script>
