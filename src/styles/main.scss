@use 'sass:map';
@use '_partials' as *;

// Apply theme variables
:root {
  @include generate-theme-vars('light');

  // Add spacing variables
  --spacing-2: 0.5rem;
  --spacing-4: 1rem;
  --spacing-8: 2rem;

  &[data-theme='dark'] {
    @include generate-theme-vars('dark');
  }
}

html,
body {
  margin: 0;
  width: 100%;
  height: 100%;
}

body {
  font-family: map.get($fonts, primary);
  /*background-color: theme('bg-primary');*/
  color: theme('text-primary');
  line-height: 1.6;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* View Transitions */
@starting-style {
  ::view-transition-group(*),
  ::view-transition-old(*),
  ::view-transition-new(*) {
    animation: none !important;
  }
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fade-out {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes slide-down {
    from {
        opacity: 0;
        transform: translateY(-30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Content animation classes */
.animate-in {
    animation: slide-down 0.6s ease-out forwards;
    opacity: 0;
}

.stagger-in > * {
    opacity: 0;
    animation: slide-down 0.6s ease-out forwards;
}

@for $i from 1 through 10 {
    .stagger-in > *:nth-child(#{$i}) {
        animation-delay: #{$i * 0.1}s;
    }
}

/* Ensure smooth transitions for color changes */
* {
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* Page transition styles */
::view-transition-old(root) {
    animation: fade-out 0.5s ease-out forwards;
}

::view-transition-new(root) {
    animation: fade-in 0.5s ease-out forwards;
}
